{{>partial_header}}

using {{packageName}}.ApiClient;
using {{packageName}}.Configuration;
using System.Diagnostics;
using System.Diagnostics.Metrics;

namespace {{packageName}}.Telemetry;

public class Metrics {
    public const string name = "{{packageName}}";
    public TelemetryCounters counters;
    public TelemetryHistograms histograms;
    public Meter meter = new(name, Configuration.Configuration.Version);

    public Metrics() {
        histograms = new TelemetryHistograms(meter);
        counters = new TelemetryCounters(meter);
    }

    public void buildForResponse<T>(string apiName, HttpResponseMessage response, RequestBuilder<T> requestBuilder,
        Credentials? credentials, Stopwatch requestDuration, int retryCount) => histograms.buildForResponse(response,
        Attributes.buildAttributesForResponse(apiName, response, requestBuilder, credentials, requestDuration,
            retryCount),
        requestDuration);

    public void buildForClientCredentialsResponse<T>(HttpResponseMessage response, RequestBuilder<T> requestBuilder,
        Credentials? credentials, Stopwatch requestDuration, int retryCount) => counters.buildForResponse(
        Attributes.buildAttributesForResponse("ClientCredentialsExchange", response, requestBuilder, credentials,
            requestDuration, retryCount));
}